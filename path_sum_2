/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root , vector<vector<int>>&answer, vector<int>temp, int targetsum , int sum){
        if(root == NULL){
            return;
        }
        sum += root->val;
        temp.push_back(root->val);
        if(root->left == NULL && root -> right == NULL){
           

            if(sum==targetsum){
                answer.push_back(temp);
                return;
            }
            else{
                return;
            }
        }
        solve(root->left,answer,temp,targetsum , sum);
        solve(root->right,answer, temp , targetsum , sum);
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>answer;
        vector<int>temp;
        solve(root,answer,temp,targetSum,0);
        return answer;
    }
};
